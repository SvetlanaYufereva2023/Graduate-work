#Область ПрограммныйИнтерфейс    

Процедура ВКМ_УведомлениеВТелеграммПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.Ссылка.Пустая()Тогда
		Заказ = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
		Заказ.Текст = СтрШаблон("Добавлен новый заказ. Назначен специалист %1, Дата проведения работ %2, Плановое время начала работ %3, Плановое время окончания работ %4",
		Источник.Специалист,Формат(Источник.ДатаПроведенияРабот,"ДФ=dd.MM.yyyy"),Формат(Источник.ВремяНачалаРаботПлан,"ДФ=ЧЧ:мм"),Формат(Источник.ВремяОкончанияРаботПлан,"ДФ=ЧЧ:мм"));
		Заказ.Записать();     
		Возврат;
	КонецЕсли;		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан КАК ВремяНачалаРаботПлан,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан КАК ВремяОкончанияРаботПлан
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";  
	
	Запрос.УстановитьПараметр("Ссылка",Источник.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		
			Если Источник.ДатаПроведенияРабот <> ВыборкаДетальныеЗаписи.ДатаПроведенияРабот Тогда
				Заказ = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
				Заказ.Текст = СтрШаблон("В Заказе %1 изменилась дата проведения работ. Новая дата %2",ВыборкаДетальныеЗаписи.Ссылка,Формат(Источник.ДатаПроведенияРабот,"ДФ=dd.MM.yyyy"));
				Заказ.Записать();   
			КонецЕсли;	
			
			Если Источник.Специалист <> ВыборкаДетальныеЗаписи.Специалист Тогда
				Заказ = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
				Заказ.Текст = СтрШаблон("В Заказе %1 изменился исполнитель. Новый исполнитель %2",ВыборкаДетальныеЗаписи.Ссылка,Источник.Специалист);
				Заказ.Записать();     
			КонецЕсли;	
			Если Источник.ВремяНачалаРаботПлан <> ВыборкаДетальныеЗаписи.ВремяНачалаРаботПлан Тогда
				Заказ = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
				Заказ.Текст = СтрШаблон("В Заказе %1 изменилось время начала проведения работ. Новое время %2",ВыборкаДетальныеЗаписи.Ссылка,Формат(Источник.ВремяНачалаРаботПлан,"ДФ=ЧЧ:мм"));
				Заказ.Записать();     
			КонецЕсли;
			Если Источник.ВремяОкончанияРаботПлан <> ВыборкаДетальныеЗаписи.ВремяОкончанияРаботПлан Тогда
				Заказ = Справочники.ВКМ_УведомленияТелеграммБоту.СоздатьЭлемент();
				Заказ.Текст = СтрШаблон("В Заказе %1 изменилось время окончания проведения работ. Новое время %2",ВыборкаДетальныеЗаписи.Ссылка,Формат(Источник.ВремяОкончанияРаботПлан,"ДФ=ЧЧ:мм"));
				Заказ.Записать();
			КонецЕсли;  
				
	КонецЦикла;     
КонецПроцедуры

Процедура ВКМ_ОтправитьСообщенияВТелеграмм() Экспорт
	
	НовыеСообщения = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УведомленияТелеграммБоту.Текст КАК Текст,
		|	ВЫБОР
		|		КОГДА ВКМ_УведомленияТелеграммБоту.Ссылка ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВКМ_УведомленияТелеграммБоту.Ссылка
		|	КОНЕЦ КАК Ссылка
		|ИЗ
		|	Справочник.ВКМ_УведомленияТелеграммБоту КАК ВКМ_УведомленияТелеграммБоту
		|ГДЕ
		|	НЕ ВКМ_УведомленияТелеграммБоту.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();                                                   
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Ссылка = 0 Тогда  
			Возврат;
		Иначе	
			НовыеСообщения.Добавить(ВыборкаДетальныеЗаписи.Текст); 
		КонецЕсли;
		
	КонецЦикла;   
	
	Если НовыеСообщения.Количество()>0 Тогда
	
	УстановкаСоединенияСТелеграмм(НовыеСообщения);    
	
	КонецЕсли;
			
КонецПроцедуры

Функция УстановкаСоединенияСТелеграмм(НовыеСообщения)
	
	Токен = Константы.ВКМ_ТокенУправленияТелеграмБотом.Получить();   
	Идентификатор = Константы.ВКМ_ИдентификаторГруппыДляОповещения.Получить();

	АдресРесурса = "bot"+Токен+"/"+"sendMessage";
	
	Соединение = Новый HTTPСоединение("api.telegram.org", 443, , , , , Новый ЗащищенноеСоединениеOpenSSL());
	
	Данные = Новый Структура;  
	Данные.Вставить("chat_id",Идентификатор);
	Данные.Вставить("text",НовыеСообщения); 
	
	ЗаписьJSON = новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON,Данные);
	СтрокаЗапроса = ЗаписьJSON.Закрыть();
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("content-type", "application/json");   
	
	Запрос = Новый HTTPЗапрос(АдресРесурса,Заголовки);
	Запрос.УстановитьТелоИзСтроки(СтрокаЗапроса);    
	
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);    
	
	РезультатОтправки = Ответ.КодСостояния;
	
	Если РезультатОтправки <> 200 Тогда    
		
		ЗаписьЖурналаРегистрации("Отправка сообщений в Телеграмм",УровеньЖурналаРегистрации.Ошибка,,,ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецЕсли;    
	
	Если РезультатОтправки = 200 Тогда
		
		СообщенияДляУдаления = Справочники.ВКМ_УведомленияТелеграммБоту.Выбрать();
		Пока СообщенияДляУдаления.Следующий() Цикл
			
			ОбъектСправочника = СообщенияДляУдаления.ПолучитьОбъект();
			ОбъектСправочника.Удалить();  
			
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецФункции				

#КонецОбласти  

