#Область ПрограммныйИнтерфейс   
Функция ВыполнитьАвтозаполнение(ПараметрыЗапуска)Экспорт
	
	АбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	ВыполненныеРаботы = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	//Если НЕ ЗначениеЗаполнено(АбонентскаяПлата)Тогда
	//	 Сообщение = Новый СообщениеПользователю;
	//	 Сообщение.Текст = "Необходимо заполнить значение константы Номенклатура абонентской платы";
	//	 Сообщение.Сообщить();   
	//	 Возврат;
	//КонецЕсли;	 
	//Если НЕ ЗначениеЗаполнено(ВыполненныеРаботы)Тогда
	//	 Сообщение = Новый СообщениеПользователю;
	//	 Сообщение.Текст = "Необходимо заполнить значение константы Номенклатура работы специалиста";
	//	 Сообщение.Сообщить();
	//	Возврат;
	//КонецЕсли;	  
	//
	//ДокОбъект.Товары.Очистить();
	//ДокОбъект.Услуги.Очистить();
	//ДокОбъект.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Договор.Ссылка КАК ДоговорСсылка,
		|	РеализацияТоваровУслуг.Договор.ВКМ_СуммаЕжемесячнойПлаты КАК СуммаЕжемесячнойПлаты,
		|	РеализацияТоваровУслуг.Договор.ВКМ_СтоимостьЧаса КАК СтоимостьЧаса,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|		ПО РеализацияТоваровУслуг.Договор = ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка МЕЖДУ &ДатаНачала И &ДатаОкончания";     
	
//	Запрос.УстановитьПараметр("Ссылка", ДокОбъект.Ссылка);  
	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыЗапуска.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыЗапуска.ДатаОкончания);
	//Запрос.УстановитьПараметр("Договор", ДокОбъект.Ссылка.Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();  
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СуммаЕжемесячнойПлаты > 0 Тогда
			ДокРеализации = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			ДокРеализации.Дата = ПараметрыЗапуска.ДатаОкончания;
			ДокРеализации.Договор = ВыборкаДетальныеЗаписи.ДоговорСсылка;
			
			НоваяСтрока = ДокРеализации.Услуги.Добавить();    
			НоваяСтрока.Номенклатура = АбонентскаяПлата;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Цена = ВыборкаДетальныеЗаписи.СуммаЕжемесячнойПлаты;    
			НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаЕжемесячнойПлаты; 
			ДокРеализации.Записать();
			
		КонецЕсли; 
		
		Если ВыборкаДетальныеЗаписи.СуммаКОплате > 0 Тогда
			
			ДокРеализации = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			ДокРеализации.Дата = ПараметрыЗапуска.ДатаОкончания;
			ДокРеализации.Договор = ВыборкаДетальныеЗаписи.ДоговорСсылка;

			
			НоваяСтрока = ДокРеализации.Услуги.Добавить();    
			НоваяСтрока.Номенклатура = ВыполненныеРаботы;
			НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоЧасов;
			НоваяСтрока.Цена = ВыборкаДетальныеЗаписи.СуммаКОплате / ВыборкаДетальныеЗаписи.КоличествоЧасов;   
			НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаКОплате; 
			ДокРеализации.Записать();  
			
		КонецЕсли;
		
	КонецЦикла;   
	
КонецФункции	



#КонецОбласти  
