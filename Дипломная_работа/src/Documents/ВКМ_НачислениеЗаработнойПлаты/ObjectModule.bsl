
#Область ОбработчикиСобытий
		
Процедура ОбработкаПроведения(Отказ, Режим)  
	
	СформироватьДвижения();
	
	РассчитатьОклад();  
	
	РассчитатьОтпуск();  
	
	РассчитатьНДФЛ();

	
КонецПроцедуры     

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения(); 
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;    
	
	ДвижениеОтпуск = Движения.ВКМ_ПлановыеОтпуска.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		//@skip-check object-not-accessible-concrete-compatiblity-mode
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;  
		
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ТекСтрокаОсновныеНачисления.ДатаОкончания,-12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ТекСтрокаОсновныеНачисления.ДатаОкончания,-1)); 
			
			ДвижениеОтпуск = Движения.ВКМ_ПлановыеОтпуска.Добавить();
			ДвижениеОтпуск.Период = Дата;
			ДвижениеОтпуск.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеОтпуск.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник; 
			ДвижениеОтпуск.КоличествоДней = (НачалоДня(ТекСтрокаОсновныеНачисления.ДатаОкончания) - НачалоДня(ТекСтрокаОсновныеНачисления.ДатаНачала)) / (60 * 60 * 24)+1;
			
		КонецЕсли;	
		
	КонецЦикла;   
	
	Движения.ВКМ_ОсновныеНачисления.Записать();   
	
	Движения.ВКМ_ПлановыеОтпуска.Записать();
	
КонецПроцедуры	   

Процедура РассчитатьОклад();  
	
	//.2 Расчет фактического периода действия   
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета",ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = ОсновныеНачисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ОтработаноДней,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК ДнейПоПлану,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_ДанныеГрафика
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеГрафика.ОтработаноДней КАК ОтработаноДней,
		|	ВТ_ДанныеГрафика.ДнейПоПлану КАК ДнейПоПлану,
		|	ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&ПериодРегистрации,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка); 
	Запрос.УстановитьПараметр("ПериодРегистрации", Дата); 
	//Запрос.УстановитьПараметр("Оклад",ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
    
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	//3. Расчет фактических значений
	
	Для Каждого Запись Из Движения.ВКМ_ОсновныеНачисления Цикл  
		
		Если Запись.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда 
		ВыборкаДетальныеЗаписи.Сбросить();
		ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("НомерСтроки",Запись.НомерСтроки));
		
		Запись.Результат = ВыборкаДетальныеЗаписи.Оклад / ВыборкаДетальныеЗаписи.ДнейПоПлану * ВыборкаДетальныеЗаписи.ОтработаноДней;
		Запись.ДнейПоПлану = ВыборкаДетальныеЗаписи.ДнейПоПлану;
		Запись.ОтработаноДней = ВыборкаДетальныеЗаписи.ОтработаноДней; 
		Запись.Размер = ВыборкаДетальныеЗаписи.Оклад;    
		КонецЕсли;
		
	КонецЦикла;

	//4. Запись результата
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры	

Процедура РассчитатьОтпуск(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаФакт,
		|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисления.ПериодДействияНачало, ВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК КалендарныхДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.КалендарныхДней;      
		
		Если ВыборкаДетальныеЗаписи.БазаФакт = 0 Тогда
			Движение.Результат = 0;
		Иначе	
		
		Движение.Результат = (ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп) * ВыборкаДетальныеЗаписи.КалендарныхДней / ВыборкаДетальныеЗаписи.БазаФакт;
		
		КонецЕсли;
		
	КонецЦикла; 
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина); 
	
КонецПроцедуры	

Процедура РассчитатьНДФЛ();  
	
	Движение = Движения.ВКМ_Удержания.Записывать = Истина;  
	Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ВКМ_ОсновныеНачисления.Регистратор КАК Регистратор,
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_ОсновныеНачисления.ПериодРегистрации,
		|	ВКМ_ОсновныеНачисления.Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
	    Движение = Движения.ВКМ_Удержания.Добавить();   
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ПериодРегистрации = Дата;   
		Движение.Результат = ВыборкаДетальныеЗаписи.Результат * 13 / 100; 
		Движение.Регистратор = Ссылка;  
				
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Регистратор = Ссылка;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Результат - ВыборкаДетальныеЗаписи.Результат * 13 / 100; 
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
		
КонецПроцедуры	

#КонецОбласти


