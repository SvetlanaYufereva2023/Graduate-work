
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);      
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//ВКМ_Добавление команды "Заполнить" на форму 
	ДобавитьКнопкуНаФормуВПанель(ЭтаФорма);
	
	
КонецПроцедуры    

//ВКМ_Добавление команды "Заполнить" на форму 
&НаСервере
Процедура ДобавитьКнопкуНаФормуВПанель(ЭтаФорма) Экспорт      
	
	НоваяКоманда		=ЭтаФорма.Команды.Добавить("Заполнить");
	НоваяКоманда.Действие="Заполнить";
	
	Кнопка				=ЭтаФорма.Элементы.Добавить("Заполнить", Тип("КнопкаФормы"), ЭтаФорма.Элементы.ФормаКоманднаяПанель);
	Кнопка.Заголовок	="Заполнить";
	Кнопка.ИмяКоманды	="Заполнить";  
	
КонецПроцедуры          

//ВКМ_Добавление команды "Заполнить" на форму //

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
		
	ЗаполнитьНаСервере(); 
	
КонецПроцедуры     

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

//ВКМ. Добавлена команда автозаполнения документа по договору на абонентское обслуживание
&НаСервере
Процедура ЗаполнитьНаСервере()
	
	
	Если Объект.Договор.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание")Тогда
		
		ДоговорДействует = ПроверитьДействиеДоговора();  
		
		Если ДоговорДействует Тогда
		
		ДокОбъект = РеквизитФормыВЗначение("Объект");
		ДокОбъект.ВыполнитьАвтозаполнение(ДокОбъект);  
		ЗначениеВРеквизитФормы(ДокОбъект,"Объект");	 
		
		КонецЕсли;
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Автозаполнение возможно только для договора на абонентское обслуживание";
		Сообщение.Сообщить();
		
	КонецЕсли;	
	
		
КонецПроцедуры

 &НаСервере
 Функция ПроверитьДействиеДоговора()
	 
	ДоговорДейстует = Истина; 
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачала КАК ВКМ_ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончания КАК ВКМ_ДатаОкончания
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();  
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ДатаНачала = ВыборкаДетальныеЗаписи.ВКМ_ДатаНачала;
		ДатаОкончания = ВыборкаДетальныеЗаписи.ВКМ_ДатаОкончания; 
		  	
	КонецЦикла;
	
	Если ДатаНачала <> Неопределено И ДатаНачала > Объект.Дата Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Автозаполнение не возможно. Договор не действительный, договор вступает в силу с %1",ДатаНачала);
		Сообщение.Сообщить();   
		Отказ = Истина;
		ДоговорДейстует = Ложь;
		ИначеЕсли ДатаОкончания <> Неопределено И ДатаОкончания < Объект.Дата Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Автозаполнение не возможно. Договор не действительный, действие договора закончилось %1",ДатаОкончания);
		Сообщение.Сообщить();   
		Отказ = Истина;
		ДоговорДейстует = Ложь;
	КонецЕсли;
	
	Возврат ДоговорДейстует;
    	
КонецФункции


#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти


